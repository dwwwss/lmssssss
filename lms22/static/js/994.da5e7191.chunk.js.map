{"version":3,"file":"static/js/994.da5e7191.chunk.js","mappings":"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","sources":["views/ui/Breadcrumbs.js"],"sourcesContent":["import {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  Table,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\n// import ProjectTables from \"../../components/dashboard/ProjectTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState , useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed\r\nimport listPlugin from \"@fullcalendar/list\"; //For List View\r\nimport axios from \"axios\";\r\nimport { assigncourseapi } from \"../../api/user\";\r\nconst Breadcrumbs = () => {\r\n  const location = useLocation();\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n  const userName = localStorage.getItem(\"name\");\r\n  const userId = localStorage.getItem(\"id\");\r\n  console.log(userId)\r\n  // console.log(userName) // retrieve user's name from local storage\r\n  const navigate = useNavigate();\r\n  const [checked , setChecked] = useState(false)\r\n  const [events, setEvents] = useState([\r\n    {\r\n      title: \"HTML\",\r\n      date: \"2023-05-15\",\r\n      apiData: {\r\n        content: \"This is event 1 content\",\r\n      },\r\n    },\r\n    {\r\n      title: \"CSS\",\r\n      date: \"2023-05-20\",\r\n      apiData: {\r\n        content: \"This is event 2 content\",\r\n      },\r\n    },\r\n  ]);\r\n \r\n  const [apiData, setApiData] = useState(\"\");\r\n  useEffect(() => {\r\n    async function callApi() {\r\n       const apiResult = await \r\n      assigncourseapi(userId)\r\n      console.log(apiResult)\r\n    \r\n      setApiData(apiResult);\r\n    }\r\n    callApi();\r\n  },[]);\r\n\r\n  const handleCheckboxChange = async (courseId) => {\r\n    const updatedApiData = [...apiData];\r\n    const courseIndex = updatedApiData.findIndex(item => item.courseId === courseId);\r\n    \r\n    if (courseIndex !== -1) {\r\n      const course = updatedApiData[courseIndex];\r\n      course.status = !course.status;\r\n    \r\n      setApiData(updatedApiData);\r\n    \r\n      try {\r\n        const status = course.status ? \"true\" : \"false\";\r\n    \r\n        let data = {\r\n          status: course.status\r\n        };\r\n    \r\n        localStorage.setItem(`courseStatus_${courseId}`, status);\r\n    \r\n        await axios.put(\r\n          `http://10.0.0.11/lms/api/UserAssignedCourses/courses/${courseId}/users/${userId}`, \r\n          data,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n          }\r\n        );\r\n    \r\n        console.log(\"Course status updated successfully\");\r\n      } catch (error) {\r\n        console.error(\"Failed to update course status:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const updatedApiData = [...apiData];\r\n  //   updatedApiData.forEach((item) => {\r\n  //     const status = localStorage.getItem(`courseStatus_${item.courseId}`);\r\n  //     if (status !== null) {\r\n  //       item.status = status === \"true\";\r\n  //     }\r\n  //   });\r\n  //   setApiData(updatedApiData);\r\n  // }, []);\r\n  // localStorage.setItem(\"name\",location.state );\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"60px\" }} className=\"maincontainer caliber-font\">\r\n        <div className=\"card text-bg-light mb-3\" style={{ maxWidth: \"14rem\" }}>\r\n          {/* <div className=\"card-header\">Header</div> */}\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Welcome</h5>\r\n            <p className=\"card-text\">{userName}</p>\r\n          </div>\r\n        </div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle className=\"caliber-font\" tag=\"h5\">Training Courses</CardTitle>\r\n            <Table  className=\"no-wrap mt-3 align-middle table-hover-animation\" responsive borderless>\r\n              <thead>\r\n                <tr className=\"caliber-font\">\r\n                  <th>Course Name</th>\r\n                  <th className=\"status-column\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {apiData && apiData.map((tdata, index) => (\r\n                  \r\n                  <tr key={index} className=\"border-top\">\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center p-2\">\r\n                        <div className=\"ms-3\">\r\n                          <h6 className=\"mb-0\">{tdata.title}</h6>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input type=\"checkbox\" checked={tdata.status}\r\n         onChange={() => handleCheckboxChange(tdata.courseId)}></input>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, interactionPlugin, listPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          headerToolbar={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"dayGridMonth,dayGridWeek,dayGridDay,listWeek\",\r\n          }}\r\n          events={events}\r\n          //       events={[\r\n          //   {\r\n          //     title: \"HTML\",\r\n          //     date: \"2023-05-15\",\r\n          //     apiData: {\r\n          //       content: \"This is event 1 content\",\r\n          //     },\r\n          //   },\r\n          //   {\r\n          //     title: \"CSS\",\r\n          //     date: \"2023-05-20\",\r\n          //     apiData: {\r\n          //       content: \"This is event 2 content\",\r\n          //     },\r\n          //   },\r\n          // ]}\r\n          eventContent={(eventInfo) => {\r\n            return (\r\n              <div>\r\n                <div>{eventInfo.timeText}</div>\r\n                <div>{eventInfo.event.title}</div>\r\n                <div>{eventInfo.event.extendedProps.apiData.content}</div>\r\n              </div>\r\n            );\r\n          }}\r\n          style={{ height: \"calc(100vh - 60px)\" }}\r\n          className=\"fc-header-fixed  \"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n"],"names":["useLocation","JSON","parse","localStorage","getItem","userName","userId","console","log","useNavigate","_useState","useState","_useState2","_slicedToArray","_useState3","title","date","apiData","content","_useState4","events","_useState5","_useState6","setApiData","useEffect","_callApi","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiResult","wrap","_context","prev","next","assigncourseapi","sent","stop","apply","arguments","callApi","handleCheckboxChange","_ref","_callee2","courseId","updatedApiData","courseIndex","course","status","data","_context2","_toConsumableArray","findIndex","item","setItem","concat","axios","put","headers","t0","error","_x","_jsx","_Fragment","children","_jsxs","style","marginTop","className","maxWidth","Card","CardBody","CardTitle","tag","Table","responsive","borderless","map","tdata","index","type","checked","onChange","FullCalendar","plugins","dayGridPlugin","interactionPlugin","listPlugin","initialView","headerToolbar","left","center","right","eventContent","eventInfo","timeText","event","extendedProps","height"],"sourceRoot":""}